generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contract {
  id               String   @id @map("id")
  number           Int      @map("number")
  local            String   @map("local")
  phone            String   @map("phone")
  installationDate DateTime @map("installationDate")
  installationHour String   @map("installationHour")
  products         String[] @map("products")
  price            Float    @map("price")
  status           String   @map("status")
  userId           String   @map("user_id")
  createdAt        DateTime @map("createdAt")
  updatedAt        DateTime @map("updatedAt")
  user             User     @relation(fields: [userId], references: [id])
}

model User {
  id        String     @id @map("id")
  username  String     @unique @map("username")
  name      String     @map("name")
  lastname  String     @map("lastname")
  password  String     @map("password")
  createdAt DateTime   @map("createdAt")
  updatedAt DateTime   @map("updatedAt")
  Contract  Contract[]
  Notes     Notes[]
  userRoles UserRoles[]
}

model Notes {
  id        String   @id @map("id")
  text      String   @map("text")
  userId    String   @map("user_id")
  createdAt DateTime @map("createdAt")
  updatedAt DateTime @map("updatedAt")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Role {
  id String @id
  name String
  description String
  createdAt DateTime
  updatedAt DateTime
  userRoles UserRoles[]
}

model UserRoles {
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  roleId String @unique
}